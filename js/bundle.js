/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// module \"map-module.js\"\n\nvar map;\n\nfunction getNonZeroRandomNumber() {\n    var random = Math.floor(Math.random() * 199) - 99;\n    if (random == 0) return getNonZeroRandomNumber();\n    return random;\n}\n\nfunction drawMap(route_shape, route_id) {\n    // console.log(\"map\",map);\n\n    if (map) {\n        map.remove();\n    }\n\n    var currentVehicles = [];\n\n    var firstTime = false;\n    // L.RotatedMarker=L.Marker.extend( {\n    //   options: { angle: 0, offset: { x:-34 / 2, y: -48 / 2 } },\n    //   _setPos: function(pos) {\n    //     L.Marker.prototype._setPos.call(this, pos);\n    //     this._icon.style[L.DomUtil.TRANSFORM] +=' rotate(' + this.options.angle + 'deg)';\n    //   }\n    // }\n\n    // );\n    var pubnub = new PubNub({\n        publishKey: 'pub-c-1b748bbe-e0a3-4965-9248-10ae2d9e98bf',\n        subscribeKey: 'sub-c-f5d10302-3687-11e7-b860-02ee2ddab7fe'\n    });\n    var channel = 'pubnub-mapbox' + getNonZeroRandomNumber();\n    map = eon.map({\n        // debug: true,\n        pubnub: pubnub,\n        id: 'map',\n        mbToken: 'pk.eyJ1IjoiaWFuamVubmluZ3MiLCJhIjoiZExwb0p5WSJ9.XLi48h-NOyJOCJuu1-h-Jg',\n        mbId: 'ianjennings.l896mh2e',\n        channels: [channel],\n        connect: connect,\n        options: {\n            zoomAnimation: false\n        },\n        message: function message(data) {\n            // console.log(\"inside message function\");\n            if (!firstTime) {\n                // console.log(JSON.stringify(data,null,4));\n                map.setView(data[0].latlng, 11);\n            }\n            firstTime = true;\n\n            /* Update marker */\n            // console.log(\"currentVehicles\", JSON.stringify(currentVehicles,null,4));\n            // console.log(map);\n            // console.log(\"this\",this.marker());\n            // console.log(JSON.stringify(data,null,4));\n            // var _self = this; // the map instance\n            // data.forEach(function(obj) {\n            //     _self.marker(obj.latlng, obj.data); // update marker ???\n            // });\n\n        },\n        rotate: false,\n        marker: function marker(latlng, data) {\n            // console.log(\"latlng\",JSON.stringify(latlng,null,4));\n            // console.log(\"data\",JSON.stringify(data,null,4));\n            // console.log(\"Inside marker function!!!!!!\");\n            var marker = new L.Marker(latlng, {\n                //offset: [-34 / 2, -48 / 2 ],\n                icon: L.icon({\n                    iconUrl: 'https://navarrorc.github.io/bus-alert/images/bus_icon_small.png',\n                    iconSize: [34, 48],\n                    iconAnchor: [34 / 2, 48], // see: https://www.mapbox.com/mapbox.js/api/v3.0.1/l-icon/\n                    popupAnchor: [0, -48]\n                })\n            });\n\n            var direction_label = data.direction === 1 ? \"Inbound\" : \"Outbound\";\n            marker.bindPopup(\"<strong>Trip ID: </strong>\" + data.trip_id + \"<br><strong>Bus ID: </strong>\" + data.id + \"<br><strong>Direction: </strong>\" + direction_label);\n\n            return marker;\n        }\n    });\n\n    L.control.scale().addTo(map);\n\n    // var latLngs = paths.features[0].geometry.coordinates;\n    // latLngs.forEach(function(latLng) { latLng.reverse(); });\n    // var layer = L.geoJson(route2_paths, {\n    //     color: \"#F58426\",\n    //     weight: 3,\n    //     opacity: 1\n    // });\n    // layer.addTo(map);\n\n    var layer2 = L.geoJson(route_shape, {\n        color: \"#F58426\",\n        weight: 3,\n        opacity: 0.7\n    });\n    layer2.addTo(map);\n\n    function publishData(point) {\n        // var url = \"https://realtime.mbta.com/developer/api/v2/vehiclesbyroutes?api_key=wX9NwuHnZU2ToO7GmGR9uw&routes=751&format=json\";\n        // var route_id = 2;\n        var url = 'https://viaapi.gear.host/Buses/GetByRouteId?routeId=' + route_id;\n        $.get(url, function (response) {\n            /* success */\n            var data = JSON.parse(response);\n            // console.log(JSON.stringify(data,null,4));\n\n            var vehicles = data.map(function (obj) {\n                // console.log(obj.vehicle.position);\n                return {\n                    id: obj.id,\n                    trip_id: obj.vehicle.trip.trip_id,\n                    direction: obj.vehicle.trip.direction_id,\n                    vehicle_lat: obj.vehicle.position.latitude,\n                    vehicle_lon: obj.vehicle.position.longitude\n                };\n            });\n\n            // console.log(\"vehicles\",JSON.stringify(vehicles,null,4));\n\n\n            var torchys = vehicles.map(function (obj) {\n                return {\n                    latlng: [obj.vehicle_lat, obj.vehicle_lon],\n                    data: {\n                        id: obj.id,\n                        trip_id: obj.trip_id,\n                        direction: obj.direction\n                    }\n                };\n            });\n\n            // console.log(\"torchys\", JSON.stringify(torchys,null,4));\n            // var torchys = vehicles.map(function(obj) {\n            //         if (currentVehicles.indexOf(obj.vehicle_id) < 0) {\n            //             currentVehicles.push(obj.vehicle_id);\n            //         }\n            //         // console.log(\"currentVehicles\", JSON.stringify(currentVehicles,null,4));\n\n            //         return {\n            //             latlng: [obj.vehicle_lat, obj.vehicle_lon],\n            //             data: {\n            //                 name: obj.trip_name,\n            //                 headsign: obj.trip_headsign,\n            //                 label: obj.vehicle_label,\n            //                 id: obj.vehicle_id,\n            //                 direction: obj.direction_name\n            //             }\n            //         }\n            //     })\n            //     // console.log(\"torchys\", JSON.stringify(torchys,null,4));\n\n            pubnub.publish({\n                channel: channel,\n                // message: [new_point],\n                // message: new_torchys\n                message: torchys\n            });\n        }).fail(function (error) {\n            /* error */\n            console.log(error.statusText);\n        });\n    }\n\n    function connect() {\n        var point = {\n            latlng: [29.429095, -98.5061646],\n            data: []\n        };\n\n        publishData(point);\n        setInterval(function () {\n            publishData(point);\n        }, 1000);\n    }\n}\n\nfunction drawRoute() {}\n\nexports.drawMap = drawMap;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _mapModule = __webpack_require__(0);\n\n$(function () {\n    // executes when all html elements are ready\n    // console.log(\"on load\");\n\n    // build the dropdown list for routes\n    // console.log(JSON.stringify(mbta_routes,null,4));\n\n    var routes = transit_routes.map(function (obj) {\n        return {\n            id: parseInt(obj.route_id),\n            lname: obj.route_long_name,\n            sname: obj.route_short_name\n        };\n    });\n\n    var sorted_routes = _.sortBy(routes, ['id']);\n\n    var routes_html = \"\"; // initializing a variable\n\n    sorted_routes.forEach(function (obj) {\n        // console.log(JSON.stringify(obj,null,4));\n        var name;\n        if (obj.lname) {\n            name = obj.lname;\n        } else {\n            name = obj.sname;\n        }\n\n        routes_html += '\\n            <li>\\n                <input type=\"hidden\" name=\"id\" value=\"' + obj.id + '\">\\n                <a href=\"#\">' + obj.id + ' ' + name + '</a>\\n            </li>\\n        ';\n        // console.log(routes_html);\n    });\n\n    function get_stops(route_id, direction_id) {\n        // Call api to get the stops\n        var get_stops_url = 'https://viaapi.gear.host/Buses/GetStopIdByRouteAndDirection?routeId=' + route_id + '&directionId=' + direction_id;\n        var stops_html = \"\";\n\n        $.get(get_stops_url, function (response) {\n            /* success */\n            var stops = JSON.parse(response);\n            // console.log(stops);\n            stops.forEach(function (obj) {\n                stops_html += '\\n                    <li>\\n                        <input type=\"hidden\" name=\"id\" value=\"' + obj.stop_id + '\">\\n                        <a href=\"#\">' + obj.stop_name + '</a>\\n                    </li>\\n                ';\n            });\n            $(\"#stops_list\").html(stops_html);\n            $(\"#stops-dropdown\").removeClass(\"disabled\");\n            $('#stops_list li > a').click(function (e) {\n                // console.log(\"inside\");\n                // alert(\"test\");\n                $('#stops-dropdown').html(this.innerHTML + ' <span class=\"caret\"></span>');\n            });\n        }).fail(function (error) {\n            /* error */\n            console.log(error.statusText);\n        });\n\n        // console.log(JSON.stringify(stops_html,null,4));\n    }\n\n    $(\"#transit_list\").html(routes_html);\n    //console.log(JSON.stringify(routes,null,4));\n\n    var route_id = 0,\n        direction_id = null,\n        route_shape = { path: [], id: 0 };\n    $('#transit_list li > a').click(function (e) {\n        $('.routes').html(this.innerHTML + ' <span class=\"caret\"></span>');\n        $(\"#direction-dropdown\").removeClass(\"disabled\");\n        route_id = parseInt($(this).prev().val());\n\n        if (direction_id === 0 || direction_id === 1) {\n            console.log(\"direction_id\", direction_id);\n            $('#stops-dropdown').html('Select Stop <span class=\"caret\"></span>');\n            get_stops(route_id, direction_id);\n        }\n        // console.log(map);\n        route_shape = route_shape.path == route17_paths ? { path: route2_paths, id: 2 } : { path: route17_paths, id: 17 };\n        // console.log(\"route_shape\", route_shape);\n        (0, _mapModule.drawMap)(route_shape.path, route_shape.id);\n    });\n\n    $('#direction_list li > a').click(function (e) {\n        $('#direction-dropdown').html(this.innerHTML + ' <span class=\"caret\"></span>');\n        direction_id = parseInt($(this).prev().val());\n        console.log(\"direction_id\", direction_id);\n        get_stops(route_id, direction_id);\n    });\n\n    // import map js\n    (0, _mapModule.drawMap)(route2_paths, 2);\n}); /* global $ *///# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9hcHAuanM/YzIzZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBfbWFwTW9kdWxlID0gcmVxdWlyZSgnLi9tYXAtbW9kdWxlJyk7XG5cbiQoZnVuY3Rpb24gKCkge1xuICAgIC8vIGV4ZWN1dGVzIHdoZW4gYWxsIGh0bWwgZWxlbWVudHMgYXJlIHJlYWR5XG4gICAgLy8gY29uc29sZS5sb2coXCJvbiBsb2FkXCIpO1xuXG4gICAgLy8gYnVpbGQgdGhlIGRyb3Bkb3duIGxpc3QgZm9yIHJvdXRlc1xuICAgIC8vIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KG1idGFfcm91dGVzLG51bGwsNCkpO1xuXG4gICAgdmFyIHJvdXRlcyA9IHRyYW5zaXRfcm91dGVzLm1hcChmdW5jdGlvbiAob2JqKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBpZDogcGFyc2VJbnQob2JqLnJvdXRlX2lkKSxcbiAgICAgICAgICAgIGxuYW1lOiBvYmoucm91dGVfbG9uZ19uYW1lLFxuICAgICAgICAgICAgc25hbWU6IG9iai5yb3V0ZV9zaG9ydF9uYW1lXG4gICAgICAgIH07XG4gICAgfSk7XG5cbiAgICB2YXIgc29ydGVkX3JvdXRlcyA9IF8uc29ydEJ5KHJvdXRlcywgWydpZCddKTtcblxuICAgIHZhciByb3V0ZXNfaHRtbCA9IFwiXCI7IC8vIGluaXRpYWxpemluZyBhIHZhcmlhYmxlXG5cbiAgICBzb3J0ZWRfcm91dGVzLmZvckVhY2goZnVuY3Rpb24gKG9iaikge1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShvYmosbnVsbCw0KSk7XG4gICAgICAgIHZhciBuYW1lO1xuICAgICAgICBpZiAob2JqLmxuYW1lKSB7XG4gICAgICAgICAgICBuYW1lID0gb2JqLmxuYW1lO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbmFtZSA9IG9iai5zbmFtZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJvdXRlc19odG1sICs9ICdcXG4gICAgICAgICAgICA8bGk+XFxuICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwiaGlkZGVuXCIgbmFtZT1cImlkXCIgdmFsdWU9XCInICsgb2JqLmlkICsgJ1wiPlxcbiAgICAgICAgICAgICAgICA8YSBocmVmPVwiI1wiPicgKyBvYmouaWQgKyAnICcgKyBuYW1lICsgJzwvYT5cXG4gICAgICAgICAgICA8L2xpPlxcbiAgICAgICAgJztcbiAgICAgICAgLy8gY29uc29sZS5sb2cocm91dGVzX2h0bWwpO1xuICAgIH0pO1xuXG4gICAgZnVuY3Rpb24gZ2V0X3N0b3BzKHJvdXRlX2lkLCBkaXJlY3Rpb25faWQpIHtcbiAgICAgICAgLy8gQ2FsbCBhcGkgdG8gZ2V0IHRoZSBzdG9wc1xuICAgICAgICB2YXIgZ2V0X3N0b3BzX3VybCA9ICdodHRwczovL3ZpYWFwaS5nZWFyLmhvc3QvQnVzZXMvR2V0U3RvcElkQnlSb3V0ZUFuZERpcmVjdGlvbj9yb3V0ZUlkPScgKyByb3V0ZV9pZCArICcmZGlyZWN0aW9uSWQ9JyArIGRpcmVjdGlvbl9pZDtcbiAgICAgICAgdmFyIHN0b3BzX2h0bWwgPSBcIlwiO1xuXG4gICAgICAgICQuZ2V0KGdldF9zdG9wc191cmwsIGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICAgICAgLyogc3VjY2VzcyAqL1xuICAgICAgICAgICAgdmFyIHN0b3BzID0gSlNPTi5wYXJzZShyZXNwb25zZSk7XG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhzdG9wcyk7XG4gICAgICAgICAgICBzdG9wcy5mb3JFYWNoKGZ1bmN0aW9uIChvYmopIHtcbiAgICAgICAgICAgICAgICBzdG9wc19odG1sICs9ICdcXG4gICAgICAgICAgICAgICAgICAgIDxsaT5cXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cImhpZGRlblwiIG5hbWU9XCJpZFwiIHZhbHVlPVwiJyArIG9iai5zdG9wX2lkICsgJ1wiPlxcbiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9XCIjXCI+JyArIG9iai5zdG9wX25hbWUgKyAnPC9hPlxcbiAgICAgICAgICAgICAgICAgICAgPC9saT5cXG4gICAgICAgICAgICAgICAgJztcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgJChcIiNzdG9wc19saXN0XCIpLmh0bWwoc3RvcHNfaHRtbCk7XG4gICAgICAgICAgICAkKFwiI3N0b3BzLWRyb3Bkb3duXCIpLnJlbW92ZUNsYXNzKFwiZGlzYWJsZWRcIik7XG4gICAgICAgICAgICAkKCcjc3RvcHNfbGlzdCBsaSA+IGEnKS5jbGljayhmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiaW5zaWRlXCIpO1xuICAgICAgICAgICAgICAgIC8vIGFsZXJ0KFwidGVzdFwiKTtcbiAgICAgICAgICAgICAgICAkKCcjc3RvcHMtZHJvcGRvd24nKS5odG1sKHRoaXMuaW5uZXJIVE1MICsgJyA8c3BhbiBjbGFzcz1cImNhcmV0XCI+PC9zcGFuPicpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pLmZhaWwoZnVuY3Rpb24gKGVycm9yKSB7XG4gICAgICAgICAgICAvKiBlcnJvciAqL1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3Iuc3RhdHVzVGV4dCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KHN0b3BzX2h0bWwsbnVsbCw0KSk7XG4gICAgfVxuXG4gICAgJChcIiN0cmFuc2l0X2xpc3RcIikuaHRtbChyb3V0ZXNfaHRtbCk7XG4gICAgLy9jb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShyb3V0ZXMsbnVsbCw0KSk7XG5cbiAgICB2YXIgcm91dGVfaWQgPSAwLFxuICAgICAgICBkaXJlY3Rpb25faWQgPSBudWxsLFxuICAgICAgICByb3V0ZV9zaGFwZSA9IHsgcGF0aDogW10sIGlkOiAwIH07XG4gICAgJCgnI3RyYW5zaXRfbGlzdCBsaSA+IGEnKS5jbGljayhmdW5jdGlvbiAoZSkge1xuICAgICAgICAkKCcucm91dGVzJykuaHRtbCh0aGlzLmlubmVySFRNTCArICcgPHNwYW4gY2xhc3M9XCJjYXJldFwiPjwvc3Bhbj4nKTtcbiAgICAgICAgJChcIiNkaXJlY3Rpb24tZHJvcGRvd25cIikucmVtb3ZlQ2xhc3MoXCJkaXNhYmxlZFwiKTtcbiAgICAgICAgcm91dGVfaWQgPSBwYXJzZUludCgkKHRoaXMpLnByZXYoKS52YWwoKSk7XG5cbiAgICAgICAgaWYgKGRpcmVjdGlvbl9pZCA9PT0gMCB8fCBkaXJlY3Rpb25faWQgPT09IDEpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiZGlyZWN0aW9uX2lkXCIsIGRpcmVjdGlvbl9pZCk7XG4gICAgICAgICAgICAkKCcjc3RvcHMtZHJvcGRvd24nKS5odG1sKCdTZWxlY3QgU3RvcCA8c3BhbiBjbGFzcz1cImNhcmV0XCI+PC9zcGFuPicpO1xuICAgICAgICAgICAgZ2V0X3N0b3BzKHJvdXRlX2lkLCBkaXJlY3Rpb25faWQpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKG1hcCk7XG4gICAgICAgIHJvdXRlX3NoYXBlID0gcm91dGVfc2hhcGUucGF0aCA9PSByb3V0ZTE3X3BhdGhzID8geyBwYXRoOiByb3V0ZTJfcGF0aHMsIGlkOiAyIH0gOiB7IHBhdGg6IHJvdXRlMTdfcGF0aHMsIGlkOiAxNyB9O1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhcInJvdXRlX3NoYXBlXCIsIHJvdXRlX3NoYXBlKTtcbiAgICAgICAgKDAsIF9tYXBNb2R1bGUuZHJhd01hcCkocm91dGVfc2hhcGUucGF0aCwgcm91dGVfc2hhcGUuaWQpO1xuICAgIH0pO1xuXG4gICAgJCgnI2RpcmVjdGlvbl9saXN0IGxpID4gYScpLmNsaWNrKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICQoJyNkaXJlY3Rpb24tZHJvcGRvd24nKS5odG1sKHRoaXMuaW5uZXJIVE1MICsgJyA8c3BhbiBjbGFzcz1cImNhcmV0XCI+PC9zcGFuPicpO1xuICAgICAgICBkaXJlY3Rpb25faWQgPSBwYXJzZUludCgkKHRoaXMpLnByZXYoKS52YWwoKSk7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiZGlyZWN0aW9uX2lkXCIsIGRpcmVjdGlvbl9pZCk7XG4gICAgICAgIGdldF9zdG9wcyhyb3V0ZV9pZCwgZGlyZWN0aW9uX2lkKTtcbiAgICB9KTtcblxuICAgIC8vIGltcG9ydCBtYXAganNcbiAgICAoMCwgX21hcE1vZHVsZS5kcmF3TWFwKShyb3V0ZTJfcGF0aHMsIDIpO1xufSk7IC8qIGdsb2JhbCAkICovXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvYXBwLmpzXG4vLyBtb2R1bGUgaWQgPSAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ })
/******/ ]);